' Gambas module file

Public Sub gridviewAI()

  FMain.gridAI.Header = True
  FMain.gridAI.Grid = True
  FMain.gridAI.Columns.Count = 3
  FMain.gridAI.Columns[0].Title = "id"
  FMain.gridAI.Columns[0].Width = 0
  FMain.gridAI.Columns[1].Title = "Identificador"
  FMain.gridAI.Columns[1].Width = 300
  FMain.gridAI.Columns[2].Title = "Prompt"
  FMain.gridAI.Columns[2].Width = 300

End

' Función para cargar y actualizar la grilla
Public Sub cargargrid()

  Dim rPrompt As Result

  rPrompt = m_OnOff_y_Red.meConn.Exec("SELECT * FROM asistente_ai ORDER BY id")
  FMain.gridAI.Rows.Count = rPrompt.Count
  FMain.gridAI.Refresh()

End

Public Sub cargardatos(Consulta As String, Grid As GridView)

  Dim i As Integer
  Dim contenido As Result

  ' Ejecutar la consulta
  contenido = m_OnOff_y_Red.meConn.Exec(Consulta)

  ' Si no hay resultados
  If contenido.Count = 0 Then
    Message.Info("No se ha encontrado ningún resultado.")
    Return
  Endif

  ' Limpiar el Grid antes de mostrar los resultados
  FMain.gridAI.Clear()
  FMain.gridAI.Rows.Count = contenido.Count

  ' Llenar el Grid con los resultados
  For i = 0 To contenido.Count - 1
    For j As Integer = 0 To Grid.Columns.Count - 1
      Grid[i, j].Text = contenido[j]
    Next
    contenido.MoveNext
  Next

End

Public Sub PromptNuevo()
  ' Habilitamos los campos de entrada

  LimpiarCampos()

  ' Ocultamos/mostramos botones según sea necesario
  FMain.btnPromptNuevo.Visible = False
  FMain.btnPromptBorrar.Visible = False
  FMain.btnPromptGuardar.Visible = True
  FMain.btnPromptGuardarMod.Visible = False

  ' Obtenemos el último ID y sumamos +1 para el nuevo registro
  Dim resultado As Result
  resultado = m_OnOff_y_Red.meConn.Exec("SELECT MAX(id) FROM asistente_ai LIMIT 1")

  Dim Idn As Integer
  ' Si no hay ninguna entrada entonces arrancamos desde 0
  If resultado["MAX(id)"] = Null Then
    Idn = 0
  Else
    Idn = CInt(resultado["MAX(id)"]) + 1
  Endif

  FMain.txtIdPrompt.Text = Idn
  FMain.txtIdentificador.ReadOnly = False
  FMain.txtIdentificador.Background = Color.White
  FMain.txtIdentificador.SetFocus

End

Public Sub GuardarPrompt()

  Dim miCreate As Result

  Try miCreate = m_OnOff_y_Red.meConn.Create("asistente_ai")
  If Error Then
    Message.Error("Error al crear: " & Error.Text)
    Return
  Endif

  With miCreate
    !id = FMain.txtIdPrompt.Text
    !identificador = FMain.txtIdentificador.Text
    !prompt = FMain.txtAreaPrompt1.Text
    Try .Update()
    If Error Then
      Message.Error("Error al guardar: " & Error.Text)
      Return
    Endif
  End With

  Message.Info("Nueva entrada guardada.")
  cargargrid()
  ' LimpiarCamposNotas()

  FMain.txtIdentificador.ReadOnly = True
  FMain.txtIdentificador.Background = Color.Background

  FMain.btnPromptNuevo.Visible = True
  FMain.btnPromptBorrar.Visible = False
  FMain.btnPromptGuardar.Visible = False
  FMain.btnPromptGuardarMod.Visible = False

End

Public Sub gridAI_Data(Row As Integer, Column As Integer)

  Dim Contenido As Result

  If (Contenido <> Null) Then
    If Row >= 0 Then
      Contenido.moveTo(Row)
      Try FMain.gridAI.Data.Text = Str(Contenido[Column])
    Endif
  Endif

  If row Mod 2 = 0 Then
    FMain.gridAI.Data.Background = Color.RGB(230, 230, 230)
  Endif

End

Public Sub gridAI_Click()

  FMain.txtIdentificador.Enabled = True
  FMain.txtAreaPrompt1.Enabled = True
  FMain.btnPromptNuevo.Visible = True
  FMain.btnPromptBorrar.Visible = True
  FMain.btnPromptGuardar.Visible = False
  FMain.btnPromptGuardarMod.Visible = True

  ' Rellenar los campos de texto con los valores de la fila seleccionada
  FMain.txtIdPrompt.Text = FMain.gridAI[FMain.gridAI.row, 0].Text
  FMain.txtIdentificador.Text = FMain.gridAI[FMain.gridAI.row, 1].Text
  FMain.txtAreaPrompt1.Text = FMain.gridAI[FMain.gridAI.row, 2].Text

End

Public Sub LimpiarCampos()

  FMain.txtIdPrompt.Text = ""
  FMain.txtIdentificador.Text = ""
  FMain.txtAreaPrompt1.Text = ""

End

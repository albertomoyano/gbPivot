' Gambas module file

Public hResultadoGlosario As Result

Public Sub ConfigurarGridGlosario(grid As GridView)

  With grid
    .Header = True
    .Grid = True
    .Columns.Count = 13

    ' Configuración de columnas
    For i As Integer = 0 To 12
      Select Case i
        Case 0
          .Columns[i].Title = "Id"
          .Columns[i].Width = 0
        Case 1
          .Columns[i].Title = "Tipo"
          .Columns[i].Width = 100
        Case 2
          .Columns[i].Title = "Clave"
          .Columns[i].Width = 300
        Case 4
          .Columns[i].Title = "Nombre"
          .Columns[i].Width = 150
        Case 6
          .Columns[i].Title = "Primera vez"
          .Columns[i].Width = 800
        Case Else
          .Columns[i].Title = ""
          .Columns[i].Width = 0
      End Select
    Next
  End With

End

Public Sub ConsultaBBDDglo()

  hResultadoGlosario = m_OnOff_y_Red.meConn.Exec("SELECT * FROM glosarios ORDER BY id_glosarios DESC")
  FMain.ViewGridGlosarioTotal.Rows.Count = hResultadoGlosario.Count
  FMain.lblGlosarioTotales.Text = "La base de datos contiene <strong>" & hResultadoGlosario.Count & "</strong> entradas."
  FMain.ViewGridGlosarioTotal.Refresh()

End

Public Sub NuevoGlosario()

  LimpiarCamposGlosarios()

  ' Obtenemos el último ID y sumamos +1 para el nuevo registro
  hResultadoGlosario = m_OnOff_y_Red.meConn.Exec("SELECT MAX(id_glosarios) FROM glosarios LIMIT 1")

  Dim Idn As Integer
  ' Si no hay ninguna entrada entonces arrancamos desde 0
  If hResultadoGlosario["MAX(id_glosarios)"] = Null Then
    Idn = 0
  Else
    Idn = CInt(hResultadoGlosario["MAX(id_glosarios)"]) + 1
  Endif

  FMain.txtIDglosario.Text = Idn
  FMain.txtNAMEglosario.SetFocus

End

Public Sub LimpiarCamposGlosarios()

  FMain.txtIDglosario.Text = ""
  FMain.txtCLAVEglosario.Clear
  FMain.txtARCHIVOglosario.Clear
  FMain.txtNAMEglosario.Clear
  FMain.txtDESCRIPTIONglosario.Clear
  FMain.txtTEXTglosario.Clear
  FMain.txtPLURALglosario.Clear
  FMain.txtFIRSTglosario.Clear
  FMain.txtFIRSTPLURALglosario.Clear
  FMain.txtSORTglosario.Clear

End

Public Sub VerGlosarioEnViewGridGlosarioTotal()

  With FMain
    .txtIDglosario.Text = FMain.ViewGridGlosarioTotal[FMain.ViewGridGlosarioTotal.Row, 0].Text
    .cbTypeEntradaGlosario.Text = FMain.ViewGridGlosarioTotal[FMain.ViewGridGlosarioTotal.Row, 1].Text
    .txtCLAVEglosario.Text = FMain.ViewGridGlosarioTotal[FMain.ViewGridGlosarioTotal.Row, 2].Text
    .txtARCHIVOglosario.Text = FMain.ViewGridGlosarioTotal[FMain.ViewGridGlosarioTotal.Row, 3].Text
    .txtNAMEglosario.Text = FMain.ViewGridGlosarioTotal[FMain.ViewGridGlosarioTotal.Row, 4].Text
    .txtDESCRIPTIONglosario.Text = FMain.ViewGridGlosarioTotal[FMain.ViewGridGlosarioTotal.Row, 5].Text
    .txtFIRSTglosario.Text = FMain.ViewGridGlosarioTotal[FMain.ViewGridGlosarioTotal.Row, 6].Text
    .txtTEXTglosario.Text = FMain.ViewGridGlosarioTotal[FMain.ViewGridGlosarioTotal.Row, 7].Text
    .txtPLURALglosario.Text = FMain.ViewGridGlosarioTotal[FMain.ViewGridGlosarioTotal.Row, 8].Text
    .txtFIRSTPLURALglosario.Text = FMain.ViewGridGlosarioTotal[FMain.ViewGridGlosarioTotal.Row, 9].Text
    .txtSORTglosario.Text = FMain.ViewGridGlosarioTotal[FMain.ViewGridGlosarioTotal.Row, 10].Text
  End With

End

Public Sub BorrarGlosario()

  'Chequeamos primero que se haya elegido una entrada
  If FMain.txtIDglosario.Text = "" Then
    Message.Info("Debe primero seleccionarse la entrada a borrar.")
    Return
  Endif

  If Message.Question("¿Desea borrar la entrada?", "Si", "No") = 1 Then
    hResultadoGlosario = m_OnOff_y_Red.meConn.Exec("delete from glosarios where id_glosarios=" & FMain.txtIDglosario.Text)
  Endif

  LimpiarCamposGlosarios()

End

Public Sub GuardarGlosario()

  hResultadoGlosario!id_glosarios = FMain.txtIDglosario.Text
  hResultadoGlosario!clave = FMain.txtCLAVEglosario.Text
  hResultadoGlosario!tipo = FMain.cbTypeEntradaGlosario.Text
  hResultadoGlosario!filtro = FMain.txtARCHIVOglosario.Text
  hResultadoGlosario!nombre = FMain.txtNAMEglosario.Text
  hResultadoGlosario!descripcion = FMain.txtDESCRIPTIONglosario.Text
  hResultadoGlosario!primera_vez = FMain.txtFIRSTglosario.Text
  hResultadoGlosario!texto = FMain.txtTEXTglosario.Text
  hResultadoGlosario!plural = FMain.txtPLURALglosario.Text
  hResultadoGlosario!primer_plural = FMain.txtFIRSTPLURALglosario.Text
  hResultadoGlosario!ordenar = FMain.txtSORTglosario.Text

End

Public Sub GuardarPrimeraVezGlosario()

  Dim BuscarGlos As String

  ' Escapa los caracteres especiales(comilla simple)en el título
  Dim tituloEscapado As String

  tituloEscapado = Replace(FMain.txtTEXTglosario.Text, "'", "''")

  BuscarGlos = "SELECT * FROM glosarios WHERE texto = '" & tituloEscapado & "'"
  hResultadoGlosario = m_OnOff_y_Red.meConn.Exec(BuscarGlos)

  ' Verificar si se encontraron resultados en la consulta
  If hResultadoGlosario.Count > 0 Then
    Message.Warning("La sigla que desea agregar ya existe en la base de datos.")
    Return ' Salir de la función si el título ya existe
  Endif

  hResultadoGlosario = m_OnOff_y_Red.meConn.Create("glosarios")

  GuardarGlosario()
  m_OnOff_y_Red.meConn.Commit()
  hResultadoGlosario.Update()
  FMain.ViewGridGlosarioTotal.Refresh()

  Message.Info("Nueva entrada guardada.")

  LimpiarCamposGlosarios()

End

Public Sub GuardarCambiosGlosario()

  ' Escapa los caracteres especiales(comilla simple)en el título
  Dim tituloEscapado As String

  tituloEscapado = Replace(FMain.txtTEXTglosario.Text, "'", "''")

  hResultadoGlosario = m_OnOff_y_Red.meConn.Edit("glosarios", "id_glosarios=" & FMain.txtIDglosario.Text)

  GuardarGlosario()
  m_OnOff_y_Red.meConn.Commit()
  hResultadoGlosario.Update()
  FMain.ViewGridGlosarioTotal.Refresh()

  Message.Info("Los cambios se guardaron con éxito.")

  LimpiarCamposGlosarios()

End

Public Sub BuscarClaveGlosario()

  Dim rowIndex As Integer
  Dim Buscar As String

  If FMain.txtCLAVEglosario.Text = "" Then
    Message.Warning("Debe introducir contenido a buscar.")
    Return
  Else
    Buscar = "SELECT * FROM glosarios WHERE clave LIKE '%" & FMain.txtCLAVEglosario.Text & "%' ORDER BY id_glosarios DESC;"
    hResultadoGlosario = m_OnOff_y_Red.meConn.Exec(Buscar)
  Endif

  If hResultadoGlosario.Count = 0 Then
    Message.Info("No se ha encontrado ningún resultado.")
    Return
  Else
    FMain.ViewGridGlosarioTotal.Clear()
    FMain.ViewGridGlosarioTotal.Columns.Count = 11
    FMain.ViewGridGlosarioTotal.Rows.Count = hResultadoGlosario.Count
    rowIndex = 0

    While (hResultadoGlosario.Available)
      FMain.ViewGridGlosarioTotal[rowIndex, 0].Text = hResultadoGlosario!id_glosarios
      FMain.ViewGridGlosarioTotal[rowIndex, 1].Text = hResultadoGlosario!tipo
      FMain.ViewGridGlosarioTotal[rowIndex, 2].Text = hResultadoGlosario!clave
      FMain.ViewGridGlosarioTotal[rowIndex, 3].Text = hResultadoGlosario!filtro
      FMain.ViewGridGlosarioTotal[rowIndex, 4].Text = hResultadoGlosario!nombre
      FMain.ViewGridGlosarioTotal[rowIndex, 5].Text = hResultadoGlosario!descripcion
      FMain.ViewGridGlosarioTotal[rowIndex, 6].Text = hResultadoGlosario!primera_vez
      FMain.ViewGridGlosarioTotal[rowIndex, 7].Text = hResultadoGlosario!texto
      FMain.ViewGridGlosarioTotal[rowIndex, 8].Text = hResultadoGlosario!plural
      FMain.ViewGridGlosarioTotal[rowIndex, 9].Text = hResultadoGlosario!primer_plural
      FMain.ViewGridGlosarioTotal[rowIndex, 10].Text = hResultadoGlosario!ordenar

      hResultadoGlosario.MoveNext
      rowIndex += 1
    Wend
  Endif

End

Public Sub BuscarFiltroGlosario()

  Dim rowIndex As Integer
  Dim Buscar As String

  If FMain.txtARCHIVOglosario.Text = "" Then
    Message.Warning("Debe introducir contenido a buscar.")
    Return
  Else
    Buscar = "SELECT * FROM glosarios WHERE filtro LIKE '%" & FMain.txtARCHIVOglosario.Text & "%' ORDER BY id_glosarios DESC;"
    hResultadoGlosario = m_OnOff_y_Red.meConn.Exec(Buscar)
  Endif

  If hResultadoGlosario.Count = 0 Then
    Message.Info("No se ha encontrado ningún resultado.")
    Return
  Else
    FMain.ViewGridGlosarioTotal.Clear()
    FMain.ViewGridGlosarioTotal.Columns.Count = 11
    FMain.ViewGridGlosarioTotal.Rows.Count = hResultadoGlosario.Count
    rowIndex = 0

    While (hResultadoGlosario.Available)
      FMain.ViewGridGlosarioTotal[rowIndex, 0].Text = hResultadoGlosario!id_glosarios
      FMain.ViewGridGlosarioTotal[rowIndex, 1].Text = hResultadoGlosario!tipo
      FMain.ViewGridGlosarioTotal[rowIndex, 2].Text = hResultadoGlosario!clave
      FMain.ViewGridGlosarioTotal[rowIndex, 3].Text = hResultadoGlosario!filtro
      FMain.ViewGridGlosarioTotal[rowIndex, 4].Text = hResultadoGlosario!nombre
      FMain.ViewGridGlosarioTotal[rowIndex, 5].Text = hResultadoGlosario!descripcion
      FMain.ViewGridGlosarioTotal[rowIndex, 6].Text = hResultadoGlosario!primera_vez
      FMain.ViewGridGlosarioTotal[rowIndex, 7].Text = hResultadoGlosario!texto
      FMain.ViewGridGlosarioTotal[rowIndex, 8].Text = hResultadoGlosario!plural
      FMain.ViewGridGlosarioTotal[rowIndex, 9].Text = hResultadoGlosario!primer_plural
      FMain.ViewGridGlosarioTotal[rowIndex, 10].Text = hResultadoGlosario!ordenar

      hResultadoGlosario.MoveNext
      rowIndex += 1
    Wend
  Endif

End

Public Sub BuscarNombreGlosario()

  Dim rowIndex As Integer
  Dim Buscar As String

  If FMain.txtNAMEglosario.Text = "" Then
    Message.Warning("Debe introducir contenido a buscar.")
    Return
  Else
    Buscar = "SELECT * FROM glosarios WHERE nombre LIKE '%" & FMain.txtNAMEglosario.Text & "%' ORDER BY id_glosarios DESC;"
    hResultadoGlosario = m_OnOff_y_Red.meConn.Exec(Buscar)
  Endif

  If hResultadoGlosario.Count = 0 Then
    Message.Info("No se ha encontrado ningún resultado.")
    Return
  Else
    FMain.ViewGridGlosarioTotal.Clear()
    FMain.ViewGridGlosarioTotal.Columns.Count = 11
    FMain.ViewGridGlosarioTotal.Rows.Count = hResultadoGlosario.Count
    rowIndex = 0

    While (hResultadoGlosario.Available)
      FMain.ViewGridGlosarioTotal[rowIndex, 0].Text = hResultadoGlosario!id_glosarios
      FMain.ViewGridGlosarioTotal[rowIndex, 1].Text = hResultadoGlosario!tipo
      FMain.ViewGridGlosarioTotal[rowIndex, 2].Text = hResultadoGlosario!clave
      FMain.ViewGridGlosarioTotal[rowIndex, 3].Text = hResultadoGlosario!filtro
      FMain.ViewGridGlosarioTotal[rowIndex, 4].Text = hResultadoGlosario!nombre
      FMain.ViewGridGlosarioTotal[rowIndex, 5].Text = hResultadoGlosario!descripcion
      FMain.ViewGridGlosarioTotal[rowIndex, 6].Text = hResultadoGlosario!primera_vez
      FMain.ViewGridGlosarioTotal[rowIndex, 7].Text = hResultadoGlosario!texto
      FMain.ViewGridGlosarioTotal[rowIndex, 8].Text = hResultadoGlosario!plural
      FMain.ViewGridGlosarioTotal[rowIndex, 9].Text = hResultadoGlosario!primer_plural
      FMain.ViewGridGlosarioTotal[rowIndex, 10].Text = hResultadoGlosario!ordenar

      hResultadoGlosario.MoveNext
      rowIndex += 1
    Wend
  Endif

End

Public Sub BuscarTextoGlosario()

  Dim rowIndex As Integer
  Dim Buscar As String

  If FMain.txtTEXTglosario.Text = "" Then
    Message.Warning("Debe introducir contenido a buscar.")
    Return
  Else
    Buscar = "SELECT * FROM glosarios WHERE texto LIKE '%" & FMain.txtTEXTglosario.Text & "%' ORDER BY id_glosarios DESC;"
    hResultadoGlosario = m_OnOff_y_Red.meConn.Exec(Buscar)
  Endif

  If hResultadoGlosario.Count = 0 Then
    Message.Info("No se ha encontrado ningún resultado.")
    Return
  Else
    FMain.ViewGridGlosarioTotal.Clear()
    FMain.ViewGridGlosarioTotal.Columns.Count = 11
    FMain.ViewGridGlosarioTotal.Rows.Count = hResultadoGlosario.Count
    rowIndex = 0

    While (hResultadoGlosario.Available)
      FMain.ViewGridGlosarioTotal[rowIndex, 0].Text = hResultadoGlosario!id_glosarios
      FMain.ViewGridGlosarioTotal[rowIndex, 1].Text = hResultadoGlosario!tipo
      FMain.ViewGridGlosarioTotal[rowIndex, 2].Text = hResultadoGlosario!clave
      FMain.ViewGridGlosarioTotal[rowIndex, 3].Text = hResultadoGlosario!filtro
      FMain.ViewGridGlosarioTotal[rowIndex, 4].Text = hResultadoGlosario!nombre
      FMain.ViewGridGlosarioTotal[rowIndex, 5].Text = hResultadoGlosario!descripcion
      FMain.ViewGridGlosarioTotal[rowIndex, 6].Text = hResultadoGlosario!primera_vez
      FMain.ViewGridGlosarioTotal[rowIndex, 7].Text = hResultadoGlosario!texto
      FMain.ViewGridGlosarioTotal[rowIndex, 8].Text = hResultadoGlosario!plural
      FMain.ViewGridGlosarioTotal[rowIndex, 9].Text = hResultadoGlosario!primer_plural
      FMain.ViewGridGlosarioTotal[rowIndex, 10].Text = hResultadoGlosario!ordenar

      hResultadoGlosario.MoveNext
      rowIndex += 1
    Wend
  Endif

End

' Gambas module file

Public hResultadoInteligencia As Result

Public Sub ConfigurarGridInteligencia(grid As GridView)

  With grid
    .Header = True
    .Grid = True
    .Columns.Count = 3

    ' Configuración de columnas
    For i As Integer = 0 To 3
      Select Case i
        Case 0
          .Columns[i].Title = "Id"
          .Columns[i].Width = 0
        Case 1
          .Columns[i].Title = "Identificador"
          .Columns[i].Width = 400
        Case 2
          .Columns[i].Title = "Prompt"
          .Columns[i].Width = 300
      End Select
    Next
  End With

End

Public Sub ConsultaBBDDinteligencia()

  hResultadoInteligencia = m_OnOff_y_Red.meConn.Exec("SELECT * FROM inteligencia_artificial ORDER BY id_inteligencia DESC")
  FMain.ViewgridAI.Rows.Count = hResultadoInteligencia.Count
  FMain.ViewgridAI.Refresh()

End

Public Sub LimpiarCamposInteligencia()

  FMain.txtIdPrompt.Text = ""
  FMain.txtTemperatura.Text = ""
  FMain.txtIdentificador.Clear
  FMain.txtAreaPrompt1.Clear

End

Public Sub PromptNuevo()

  LimpiarCamposInteligencia()

  ' Obtenemos el último ID y sumamos +1 para el nuevo registro
  hResultadoInteligencia = m_OnOff_y_Red.meConn.Exec("SELECT MAX(id_inteligencia) FROM inteligencia_artificial LIMIT 1")

  Dim Idn As Integer
  ' Si no hay ninguna entrada entonces arrancamos desde 0
  If hResultadoInteligencia["MAX(id_inteligencia)"] = Null Then
    Idn = 0
  Else
    Idn = CInt(hResultadoInteligencia["MAX(id_inteligencia)"]) + 1
  Endif

  FMain.txtIdPrompt.Text = Idn
  FMain.txtIdentificador.SetFocus

End

Public Sub VerInteligenciaEnViewgridAI()

  With FMain
    .txtIdPrompt.Text = FMain.ViewgridAI[FMain.ViewgridAI.Row, 0].Text
    .txtIdentificador.Text = FMain.ViewgridAI[FMain.ViewgridAI.Row, 1].Text
    .txtAreaPrompt1.Text = FMain.ViewgridAI[FMain.ViewgridAI.Row, 2].Text
  End With

End

Public Sub BorrarInteligencia()

  'Chequeamos primero que se haya elegido una entrada
  If FMain.txtIdPrompt.Text = "" Then
    Message.Info("Debe primero seleccionarse la entrada a borrar.")
    Return
  Endif

  If Message.Question("¿Desea borrar la entrada?", "Si", "No") = 1 Then
    hResultadoInteligencia = m_OnOff_y_Red.meConn.Exec("delete from inteligencia_artificial where id_inteligencia=" & FMain.txtIdPrompt.Text)
  Endif

  LimpiarCamposInteligencia()

End

Public Sub GuardarInteligencia()

  hResultadoInteligencia!id_inteligencia = FMain.txtIdPrompt.Text
  hResultadoInteligencia!identificador = FMain.txtIdentificador.Text
  hResultadoInteligencia!prompt = FMain.txtAreaPrompt1.Text

End

Public Sub GuardarPrimeraVezInteligencia()

  Dim BuscarInteligencia As String

  ' Escapa los caracteres especiales(comilla simple)en el título
  Dim tituloEscapado As String

  tituloEscapado = Replace(FMain.txtIdentificador.Text, "'", "''")

  BuscarInteligencia = "SELECT * FROM inteligencia_artificial WHERE identificador = '" & tituloEscapado & "'"
  hResultadoInteligencia = m_OnOff_y_Red.meConn.Exec(BuscarInteligencia)

  ' Verificar si se encontraron resultados en la consulta
  If hResultadoInteligencia.Count > 0 Then
    Message.Warning("La sigla que desea agregar ya existe en la base de datos.")
    Return ' Salir de la función si el título ya existe
  Endif

  hResultadoInteligencia = m_OnOff_y_Red.meConn.Create("inteligencia_artificial")

  GuardarInteligencia()
  m_OnOff_y_Red.meConn.Commit()
  hResultadoInteligencia.Update()
  FMain.ViewgridAI.Refresh()

  Message.Info("Nueva entrada guardada.")

  LimpiarCamposInteligencia()

End

Public Sub GuardarCambiosInteligencia()

  ' Escapa los caracteres especiales(comilla simple)en el título
  Dim tituloEscapado As String

  tituloEscapado = Replace(FMain.txtIdentificador.Text, "'", "''")

  hResultadoInteligencia = m_OnOff_y_Red.meConn.Edit("inteligencia_artificial", "id_inteligencia=" & FMain.txtIdPrompt.Text)

  GuardarInteligencia()
  m_OnOff_y_Red.meConn.Commit()
  hResultadoInteligencia.Update()
  FMain.ViewgridAI.Refresh()

  Message.Info("Los cambios se guardaron con éxito.")

  LimpiarCamposInteligencia()

End

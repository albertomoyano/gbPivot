' Gambas class file

Public Sub Form_Open()
  ' Inicializar con valores predeterminados

  rbFormatoDOCX.Value = True  ' Por defecto, seleccionar DOCX
  btnListo.Visible = False    ' Inicialmente oculto
  btnCONVERTIR.Enabled = False ' Inicialmente deshabilitado

End

Public Sub btnBuscar_Click()

  Dialog.Title = "Seleccionar archivo"
  ' Ajustar el filtro según el RadioButton seleccionado
  If rbFormatoDOCX.Value Then  ' Si está seleccionado el RadioButton para DOCX
    Dialog.Filter = ["*.docx", ("Archivos word"), "*", ("Todos los archivos")]
  Else  ' Si está seleccionado el RadioButton para RTF
    Dialog.Filter = ["*.rtf", ("Archivos rtf"), "*", ("Todos los archivos")]
  Endif

  Dialog.AutoExt = True
  Dialog.Path = User.Home

  If Not Dialog.OpenFile() Then
    txtORIGEN.Text = Dialog.Path
    ' Verificar si hay texto en txtDESTINO para habilitar el botón
    VerificarCamposParaConversion()
  Endif

Catch
  Message.Error("No se pudo abrir el archivo")

End

' Función para verificar si se pueden activar las opciones de conversión
Public Sub VerificarCamposParaConversion()
  ' Habilitar el botón CONVERTIR solo si hay archivo origen y nombre destino

  btnCONVERTIR.Enabled = (Trim(txtORIGEN.Text) <> "" And Trim(txtDESTINO.Text) <> "")

End

Public Sub txtDESTINO_KeyRelease()

  Dim caracteresPermitidos As String = "abcdefghijklmnopqrstuvwxyz0123456789"
  Dim texto As String = txtDESTINO.Text
  Dim textoFiltrado As String = ""

  ' Filtrar caracteres no permitidos
  For i As Integer = 1 To Len(texto)
    Dim tecla As String = LCase(Mid(texto, i, 1))
    If InStr(caracteresPermitidos, tecla) > 0 Then
      textoFiltrado &= tecla
    Endif
  Next

  ' Limitar longitud a 12 caracteres
  If Len(textoFiltrado) > 12 Then
    Message.Warning("El nombre de salida del archivo no puede contener más de 12 caracteres.", "Entendido")
    textoFiltrado = Left(textoFiltrado, 12)
  Endif

  ' Actualizar el TextBox si cambió el texto
  If textoFiltrado <> texto Then
    txtDESTINO.Text = textoFiltrado
    ' Preservar la posición del cursor (ajustar si es necesario)
    txtDESTINO.Pos = Min(txtDESTINO.Pos, Len(textoFiltrado))
  Endif

  ' Verificar si ya podemos activar la conversión
  VerificarCamposParaConversion()

End

Public Sub btnCONVERTIR_Click()
  ' Verificar que hay un archivo seleccionado

  If Trim(txtORIGEN.Text) = "" Then
    Message.Error("Debe seleccionar un archivo para convertir", "Aceptar")
    Return
  Endif

  ' Verificar que hay un nombre de destino
  If Trim(txtDESTINO.Text) = "" Then
    Message.Error("El campo de Destino no puede estar vacío", "Aceptar")
    Return
  Endif

  Dim rutaOrigen As String = txtORIGEN.Text
  Dim directorioOrigen As String = File.Dir(rutaOrigen)
  Dim nombreSalida As String = txtDESTINO.Text & ".adoc"
  Dim rutaSalida As String = directorioOrigen & "/" & nombreSalida
  Dim formatoOrigen As String
  Dim comando As String

  ' Determinar formato de origen basado en RadioButton
  If rbFormatoDOCX.Value Then
    formatoOrigen = "docx"
  Else
    formatoOrigen = "rtf"
  Endif

  ' Construir el comando
  comando = "pandoc " & Quote(rutaOrigen) & " -o " & Quote(rutaSalida) &
    " --from=" & formatoOrigen & " --to=asciidoc --wrap=none " &
    "--extract-media=" & Quote(directorioOrigen)

  ' Mostrar comando en consola para depuración
  Print "Ejecutando: " & comando

  ' Mostrar mensaje de espera
  txtStatus.Text = "Convirtiendo, por favor espere..."
  Wait 0.2 ' Pequeña pausa para actualizar la interfaz

  ' Ejecutar el comando en el terminal integrado
  FMain.TerminalView.Input(comando & "\n")

  ' Dar tiempo suficiente para que finalice la conversión
  ' Usamos un Timer para no bloquear la interfaz
  btnCONVERTIR.Enabled = False
  Wait 1.5 ' Esperamos un tiempo razonable

  ' Verificamos varias veces si se generó el archivo, con pequeñas pausas entre intentos
  For intentos As Integer = 1 To 5
    If Exist(rutaSalida) Then
      ' Archivo encontrado, mostramos mensaje de éxito
      txtStatus.Text = "Conversión completada."
      Message.Info("Conversión completada con éxito.\n" &
        "El archivo se guardó como: " & nombreSalida &
        "\nEn la ubicación: " & directorioOrigen, "Aceptar")
      btnListo.Visible = True
      btnListo.Default = True
      btnSalir.Visible = False
      Return
    Endif
    Wait 0.5 ' Esperamos medio segundo entre intentos
  Next

  ' Si llegamos aquí es porque no se encontró el archivo después de varios intentos
  txtStatus.Text = "Error en la conversión."
  Message.Error("No se pudo confirmar la generación del archivo: " & rutaSalida &
    "\nSin embargo, verifique manualmente la ubicación por si la " &
    "conversión se completó correctamente.", "Aceptar")
  btnCONVERTIR.Enabled = True

End

Public Sub btnSalir_Click()

  Me.Close()

End

Public Sub btnListo_Click()

  Me.Close()

End
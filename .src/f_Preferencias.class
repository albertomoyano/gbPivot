' Gambas class file

Public UsuarioAdmin As String
Public sRefrescar As Result
Public hResultadoProyectos As Result
Private bCargandoDatos As Boolean

Public Sub Form_Open()

  f_Preferencias.Title = "Preferencias (usuario: " & m_OnOff_y_Red.UsuarioActual & ")"

  With TableViewUsuarios
    .Header = True
    .Grid = True
    .Columns.Count = 5
    .Columns[0].Title = "id"
    .Columns[0].Width = 0
    .Columns[1].Title = ""
    .Columns[1].Width = 200
    .Columns[2].Title = ""
    .Columns[2].Width = 200
    .Columns[3].Title = ""
    .Columns[3].Width = 200
    .Columns[4].Title = ""
    .Columns[4].Width = 200
  End With

  btnNuevoUsuario.Visible = True
  btnBorrarUsuario.Visible = False
  btnGuardarUsuario.Visible = False
  btnGuardarCambios.Visible = False

  With TableViewProyectos
    .Header = True
    .Grid = True
    .Columns.Count = 9
    .Columns[0].Title = "id"
    .Columns[0].Width = 0
    .Columns[1].Title = "Nombre del proyecto"
    .Columns[1].Width = 300
    .Columns[2].Title = "Tipo"
    .Columns[2].Width = 100
    .Columns[3].Title = "Lenguaje"
    .Columns[3].Width = 120
    .Columns[4].Title = ""
    .Columns[4].Width = 0
    .Columns[5].Title = "Fecha creación"
    .Columns[5].Width = 150
    .Columns[6].Title = ""
    .Columns[6].Width = 0
    .Columns[7].Title = ""
    .Columns[7].Width = 0
    .Columns[8].Title = ""
    .Columns[8].Width = 0
  End With

  ConsultaBBDDproyectos()

  btnNuevoProyecto.Visible = True
  btnBorrarProyecto.Visible = False
  btnGuardarProyecto.Visible = False
  btnGuardarCambiosProyecto.Visible = False

End

Public Sub ConsultaBBDDproyectos()

  hResultadoProyectos = m_OnOff_y_Red.meConn.Exec("SELECT * FROM proyectos ORDER BY id_proyectos DESC")
  TableViewProyectos.Rows.Count = hResultadoProyectos.Count
  TableViewProyectos.Refresh()

End

Public Sub btnCerrar_Click()

  Me.Close

End

Public Sub ToggleButtonMostrar_Click()
  ' Cambiar visibilidad del TabPanel2 según el estado del botón

  txtClaveAdministrador.Password = Not ToggleButtonMostrar.Value

  If ToggleButtonMostrar.Value Then
    ToggleButtonMostrar.Tooltip = "Ocultar contraseña"
  Else
    ToggleButtonMostrar.Tooltip = "Mostrar contraseña"
  End If

End

Public Sub btnReferescarAdmin_Click()

  ' Intentar obtener el registro de la base de datos
  sRefrescar = m_OnOff_y_Red.meConn.Edit("usuarios_admin", "id=" & txtIdAdmin.Text)

  ' Verificar si se obtuvo una respuesta válida
  If sRefrescar Is Null Then
    Message.Error("Error: No se encontró el registro con ese ID o la conexión falló.")
    Return
  End If

  ' Si todo está bien, proceder a guardar cambios
  guardarCambios()

  ' Verificar si sRefrescar puede hacer update sin error
  Try sRefrescar.Update()
  If Error Then
    Message.Error("Error al actualizar los datos.")
    Return
  End If

  ' Confirmar cambios en la base de datos
  Try m_OnOff_y_Red.meConn.Commit()
  If Error Then
    Message.Error("Error al confirmar los cambios en la base de datos.")
    Return
  End If

  ' Informar al usuario que los cambios se guardaron con éxito
  Message.Info("Los cambios se guardaron con éxito.")

End

Public Sub guardarCambios()

  sRefrescar!id = txtIdAdmin.Text
  sRefrescar!usuario = txtAdministrador.Text
  sRefrescar!clave = txtClaveAdministrador.Text
  sRefrescar!email = txtAdministradorEmail.Text

End

Public Sub txtCierreProyecto_KeyRelease()

  Dim texto As String = txtCierreProyecto.Text
  Dim soloDigitos As String = ""
  Dim textoFormateado As String = ""
  Dim i As Integer
  Dim c As String

  ' Extraer solo los dígitos del texto actual
  For i = 1 To Len(texto)
    c = Mid(texto, i, 1)
    If c >= "0" And c <= "9" Then
      soloDigitos &= c
    End If
  Next

  ' Limitar a máximo 8 dígitos
  If Len(soloDigitos) > 8 Then
    soloDigitos = Left(soloDigitos, 8)
  End If

  ' Formatear automáticamente según la cantidad de dígitos
  Select Case Len(soloDigitos)
    Case 0
      textoFormateado = ""
    Case 1, 2
      textoFormateado = soloDigitos
    Case 3, 4
      textoFormateado = Left(soloDigitos, 2) & "-" & Mid(soloDigitos, 3)
    Case 5, 6, 7, 8
      textoFormateado = Left(soloDigitos, 2) & "-" & Mid(soloDigitos, 3, 2) & "-" & Mid(soloDigitos, 5)
  End Select

  ' Actualizar solo si cambió
  If textoFormateado <> texto Then
    txtCierreProyecto.Text = textoFormateado
    ' Colocar cursor al final
    txtCierreProyecto.Pos = Len(textoFormateado)
  End If

End Sub

' Función adicional para bloquear caracteres no numéricos desde el teclado
Public Sub txtCierreProyecto_KeyPress()
  ' Permitir teclas de control

  If Key.Code = Key.BackSpace Or Key.Code = Key.Delete Or
      Key.Code = Key.Left Or Key.Code = Key.Right Or
      Key.Code = Key.Tab Or Key.Code = Key.Enter Or
      Key.Code = Key.Home Or Key.Code = Key.End Then
    Return
  End If

  ' Solo permitir números
  If Key.Text < "0" Or Key.Text > "9" Then
    Stop Event
  End If

End Sub

Public Sub btnNuevoProyecto_Click()

  txtProyecto.ReadOnly = False
  txtProyecto.Background = Color.White
  btnNuevoProyecto.Visible = False
  btnGuardarProyecto.Visible = True
  btnGuardarCambiosProyecto.Visible = False
  CheckBoxTerminado.Enabled = True

  LimpiarCamposProyecto()

  Dim fecha As String
  Dim HOY As Date

  If txtInicioProyecto.Text = "" Then
    HOY = Now
    fecha = Format(HOY, "dd-mm-yyyy")
    txtInicioProyecto.Text = fecha
  Endif

  ' Obtenemos el último ID y sumamos +1 para el nuevo registro
  hResultadoProyectos = m_OnOff_y_Red.meConn.Exec("SELECT MAX(id_proyectos) FROM proyectos LIMIT 1")

  Dim Idn As Integer
  ' Si no hay ninguna entrada entonces arrancamos desde 0
  If hResultadoProyectos["MAX(id_proyectos)"] = Null Then
    Idn = 0
  Else
    Idn = CInt(hResultadoProyectos["MAX(id_proyectos)"]) + 1
  Endif

  txtIDproyectos.Text = Idn
  txtProyecto.SetFocus

End

Public Sub btnGuardarProyecto_Click()

  GuardarProyectoPrimeraVez()
  ConsultaBBDDproyectos()
  LimpiarCamposProyecto()

  txtProyecto.ReadOnly = True
  txtProyecto.Background = Color.Background
  btnNuevoProyecto.Visible = True
  btnGuardarProyecto.Visible = False
  btnGuardarCambiosProyecto.Visible = False
  CheckBoxTerminado.Enabled = False

End

Public Sub GuardarProyectoPrimeraVez()

  Dim BuscarProyecto As String

  ' Escapa los caracteres especiales(comilla simple)en el título
  Dim tituloEscapado As String

  tituloEscapado = Replace(txtProyecto.Text, "'", "''")

  BuscarProyecto = "SELECT * FROM proyectos WHERE nombre = '" & tituloEscapado & "'"
  hResultadoProyectos = m_OnOff_y_Red.meConn.Exec(BuscarProyecto)

  ' Verificar si se encontraron resultados en la consulta
  If hResultadoProyectos.Count > 0 Then
    Message.Warning("El nombre de proyecto que desea agregar ya existe en la base de datos.")
    Return ' Salir de la función si el título ya existe
  Endif

  hResultadoProyectos = m_OnOff_y_Red.meConn.Create("proyectos")

  GuardarProyecto()
  m_OnOff_y_Red.meConn.Commit()
  hResultadoProyectos.Update()
  TableViewProyectos.Refresh()

  Message.Info("Nueva entrada guardada.")

  ' LimpiarCamposGlosarios()

End

Public Sub GuardarCambiosProyectos()

  ' Escapa los caracteres especiales(comilla simple)en el título
  Dim tituloEscapado As String

  tituloEscapado = Replace(FMain.txtTEXTglosario.Text, "'", "''")

  hResultadoProyectos = m_OnOff_y_Red.meConn.Edit("proyectos", "id_proyectos=" & txtIDproyectos.Text)

  GuardarProyecto()
  m_OnOff_y_Red.meConn.Commit()
  hResultadoProyectos.Update()
  TableViewProyectos.Refresh()

  Message.Info("Los cambios se guardaron con éxito.")

  LimpiarCamposProyecto()

End

Public Sub GuardarProyecto()

  hResultadoProyectos!id_proyectos = txtIDproyectos.Text
  hResultadoProyectos!nombre = txtProyecto.Text
  hResultadoProyectos!tipo = cmbTipoProyecto.Text
  hResultadoProyectos!lenguaje = cmbTipoLenguaje.Text
  hResultadoProyectos!terminado = CheckBoxTerminado.Value
  hResultadoProyectos!fecha_creacion = txtInicioProyecto.Text
  hResultadoProyectos!fecha_cierre = txtCierreProyecto.Text
  hResultadoProyectos!tiempo_total = txtHorasEmpleadas.Text
  hResultadoProyectos!notas = txtNotas.Text

End

Public Sub VerProyectosEnTableViewProyectos()

  bCargandoDatos = True ' Inicia la carga de datos

  With f_Preferencias
    .txtIDproyectos.Text = TableViewProyectos[TableViewProyectos.Row, 0].Text
    .txtProyecto.Text = TableViewProyectos[TableViewProyectos.Row, 1].Text
    .cmbTipoProyecto.Text = TableViewProyectos[TableViewProyectos.Row, 2].Text
    .cmbTipoLenguaje.Text = TableViewProyectos[TableViewProyectos.Row, 3].Text
    .CheckBoxTerminado.Value = Val(TableViewProyectos[TableViewProyectos.Row, 4].Text)
    .txtInicioProyecto.Text = TableViewProyectos[TableViewProyectos.Row, 5].Text
    .txtNotas.Text = TableViewProyectos[TableViewProyectos.Row, 6].Text
    .txtCierreProyecto.Text = TableViewProyectos[TableViewProyectos.Row, 7].Text
    .txtHorasEmpleadas.Text = TableViewProyectos[TableViewProyectos.Row, 8].Text
  End With

  bCargandoDatos = False ' Finaliza la carga

End

' Public Sub VerProyectosEnTableViewProyectos()
' 
'   With f_Preferencias
'     .txtIDproyectos.Text = TableViewProyectos[TableViewProyectos.Row, 0].Text
'     .txtProyecto.Text = TableViewProyectos[TableViewProyectos.Row, 1].Text
'     .cmbTipoProyecto.Text = TableViewProyectos[TableViewProyectos.Row, 2].Text
'     .cmbTipoLenguaje.Text = TableViewProyectos[TableViewProyectos.Row, 3].Text
'     .CheckBoxTerminado.Value = Val(TableViewProyectos[TableViewProyectos.Row, 4].Text)
'     .txtInicioProyecto.Text = TableViewProyectos[TableViewProyectos.Row, 5].Text
'     .txtNotas.Text = TableViewProyectos[TableViewProyectos.Row, 6].Text
'     .txtCierreProyecto.Text = TableViewProyectos[TableViewProyectos.Row, 7].Text
'     .txtHorasEmpleadas.Text = TableViewProyectos[TableViewProyectos.Row, 8].Text
'   End With
' 
' End

Public Sub TableViewProyectos_Data(Row As Integer, Column As Integer)

  If (hResultadoProyectos <> Null) Then
    If Row >= 0 Then
      hResultadoProyectos.moveTo(Row)
      Try TableViewProyectos.Data.Text = Str(hResultadoProyectos[Column])
    Endif
  Endif

  If row Mod 2 = 0 Then
    TableViewProyectos.Data.Background = Color.RGB(230, 230, 230)
  Endif

End

Public Sub TableViewProyectos_Click()

  VerProyectosEnTableViewProyectos()

  txtProyecto.ReadOnly = False
  txtProyecto.Background = Color.White
  btnGuardarProyecto.Visible = False
  btnNuevoProyecto.Visible = False
  btnGuardarCambiosProyecto.Visible = True
  CheckBoxTerminado.Enabled = True

End

Public Sub btnGuardarCambiosProyecto_Click()

  GuardarCambiosProyectos()
  ConsultaBBDDproyectos()
  LimpiarCamposProyecto()

  txtProyecto.ReadOnly = True
  txtProyecto.Background = Color.Background
  btnNuevoProyecto.Visible = True
  btnGuardarProyecto.Visible = False
  btnGuardarCambiosProyecto.Visible = False
  CheckBoxTerminado.Enabled = False

End

Public Sub LimpiarCamposProyecto()

  txtIDproyectos.Text = ""
  txtProyecto.Text = ""
  CheckBoxTerminado.Value = False
  txtInicioProyecto.Text = ""
  txtCierreProyecto.Text = ""
  txtHorasEmpleadas.Text = ""
  txtNotas.Text = ""

End

Public Sub CheckBoxTerminado_Click()

  If bCargandoDatos Then Return ' Evita conflicto durante la carga

  If CheckBoxTerminado.Value = True And Trim(txtCierreProyecto.Text) = "" Then
    Message.Warning("Debe completar la fecha de cierre antes de marcar el proyecto como terminado.")
    CheckBoxTerminado.Value = False
  End If

End

Public Sub txtProyecto_KeyRelease()

  ' Obtener el texto actual del TextBox
  Dim texto As String

  texto = txtProyecto.Text

  ' Lista de caracteres permitidos
  Dim caracteresPermitidos As String = "0123456789abcdefghijklmnopqrstuvwxyz"

  ' Filtrar el texto para eliminar caracteres no permitidos
  Dim textoFiltrado As String
  For i As Integer = 1 To Len(texto)
    Dim tecla As String
    tecla = Mid(texto, i, 1)
    If InStr(caracteresPermitidos, tecla) > 0 Then
      textoFiltrado = textoFiltrado & tecla
    End If
  Next

  ' Actualizar el TextBox con el texto filtrado
  txtProyecto.Text = LCase(textoFiltrado)

End
